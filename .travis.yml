language: android
sudo: required
jdk: oraclejdk8
services:
  - docker
before_cache:
  - rm -f $HOME/.gradle/caches/modules-2/modules-2.lock
  - rm -fr $HOME/.gradle/caches/*/plugin-resolution/
cache:
  directories:
    - "$HOME/.gradle/caches/"
    - "$HOME/.gradle/wrapper/"
    - "$HOME/google-cloud-sdk/"
env:
  global:
    - ANDROID_API=21
    - EMULATOR_API=28
    - ANDROID_BUILD_TOOLS=28.0.3
    - ADB_INSTALL_TIMEOUT=5
android:
  components:
    - tools
    - platform-tools
    - build-tools-$ANDROID_BUILD_TOOLS
    - android-$ANDROID_API
    - android-$EMULATOR_API_LEVEL
    - extra-google-m2repository
#    - extra-android-m2repository
    - extra-android-support
    - extra
#    - addon-google_apis-google-19
#    - sys-img-armeabi-v7a-addon-google_apis-google-$ANDROID_API_LEVEL
#    - sys-img-armeabi-v7a-addon-google_apis-google-$EMULATOR_API_LEVEL
  licenses:
    - android-sdk-preview-license-.+
    - android-sdk-license-.+
    - google-gdk-license-.+
before_install:
  - yes | sdkmanager "platforms;android-28"
  - mkdir "$ANDROID_HOME/licenses" || true
  - echo -e "\n8933bad161af4178b1185d1a37fbf41ea5269c55" > "$ANDROID_HOME/licenses/android-sdk-license"
  - echo -e "\n84831b9409646a918e30573bab4c9c91346d8abd" > "$ANDROID_HOME/licenses/android-sdk-preview-license"
  - chmod +x gradlew
  - ./gradlew dependencies || true
  - openssl aes-256-cbc -K $encrypted_36a497b301fb_key -iv $encrypted_36a497b301fb_iv
    -in key.json.enc -out key.json -d
before_script:
#  - android list sdk --extended --no-ui --all
#  - echo "y" | android update sdk -a --no-ui --filter sys-img-armeabi-v7a-android-21,sys-img-x86_64-android-21
#  - android list targets
#  - echo no | android create avd --force -n test -t android-21 --abi default/armeabi-v7a
#  - emulator -avd test -no-skin -no-audio -no-window &
#  - android-wait-for-emulator
#  - adb shell input keyevent 82 &

#  - wget https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-218.0.0-linux-x86.tar.gz
#  - tar zxf google-cloud-sdk-218.0.0-linux-x86.tar.gz google-cloud-sdk
#  - echo n | ./google-cloud-sdk/install.sh
#  - gcloud auth activate-service-account --key-file dir-to-your-service-account-key.json
#  - gcloud config set project modules-4b395
#  - echo y | gcloud components update
#  - echo y | gcloud components install
  # Firebase setup
  - wget --quiet --output-document=/tmp/google-cloud-sdk.tar.gz https://dl.google.com/dl/cloudsdk/channels/rapid/google-cloud-sdk.tar.gz
  - mkdir -p /opt
  - tar zxf /tmp/google-cloud-sdk.tar.gz --directory /opt /opt/google-cloud-sdk/install.sh --quiet
  - source /opt/google-cloud-sdk/path.bash.inc

  # Setup and configure the project
  -gcloud components update
  -echo modules-4b395
  -gcloud config set project modules-4b395

  - gcloud version || true
  - if [ ! -d "$HOME/google-cloud-sdk/bin" ]; then rm -rf $HOME/google-cloud-sdk; export $CLOUDSDK_CORE_DISABLE_PROMPTS; curl https://sdk.cloud.google.com | bash; fi
  # Add gcloud to $PATH
  - source /home/travis/google-cloud-sdk/path.bash.inc
#  - gcloud version
  # Add gcloud auth
  - gcloud auth activate-service-account travisci@modules-4b395.iam.gserviceaccount.com --key-file=key.json --project=github-stars-1f51a

script:
#  - ./gradlew clean build connectedCheck -PdisablePreDex --stacktrace
#  - ./gradlew build assembleDebug
  - ./gradlew -PciBuild=true :app:assembleAndroidTest
  - gcloud components update
  - gcloud firebase test android run --type instrumentation --app app/build/outputs/apk/androidTest/debug/app-debug-androidTest.apk --device model=Nexus4,version=26,locale=en_US,orientation=portrait --environment-variables --directories-to-pull=/sdcard/tmp --timeout 20m
#  - gcloud firebase test android run --type instrumentation --app app/build/outputs/apk/debug/app-debug.apk --device model=Nexus4,version=21